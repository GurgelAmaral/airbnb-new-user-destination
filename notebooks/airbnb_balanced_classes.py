# -*- coding: utf-8 -*-
"""airbnb_balanced_classes

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12scvKb1l-IWI-iJr1u4Gow82P8IfL4Ek
"""

from imblearn.over_sampling import SMOTENC
import pandas as pd
from sklearn.model_selection import train_test_split

"""carregar dataset do treino"""

df = pd.read_csv('train_users_clean_upd.csv')

"""remover colunas não relevantes para o treino do modelo"""

df.drop(columns=['id', 'Unnamed: 0', 'timestamp_first_active'], inplace=True)
df = df.query('country_destination != "NFD"')

"""separação de x e y para resample com SMOTENC"""

x = df.drop(columns='country_destination')
y = df['country_destination']

"""captura das colunas categóricas para SMOTENC()"""

cat_cols = df.select_dtypes(include='object').columns.to_list()

print(cat_cols)

"""transformando os nomes para indices para o método"""

idx = []
for col in cat_cols:
  idx.append(df.columns.get_loc(col))

idx

"""instância do método"""

smote_nc = SMOTENC(categorical_features=idx)

x_train, x_test, y_train, y_test = train_test_split(x, y, train_size=0.99, stratify=y)

"""fit_resample com x e y"""

#x_train_rs, y_train_rs = smote_nc.fit_resample(x_train, y_train)

"""análise dos balanceamento das classes"""

#y_train_rs.value_counts(normalize=True)

#x_train_rs.dtypes

"""Exportação dos datasets já balanceados e separados"""

x_train.to_csv('x_train_resampled.csv')
y_train.to_csv('y_train_resampled.csv')

x_test.to_csv('x_test_resampled.csv')
y_test.to_csv('y_test_resampled.csv')

path = 'y_train_resampled.csv'
df_y = pd.read_csv(path, index_col=0)

df_y

print(x_train.shape[0])